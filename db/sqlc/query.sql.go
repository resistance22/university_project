// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createConsumable = `-- name: CreateConsumable :one
INSERT INTO consumable (
  "createdAt",
  title,
  uom,
  remaining
) VALUES (
  $1,
  $2,
  $3,
  $4
) RETURNING id, "createdAt", title, uom, remaining
`

type CreateConsumableParams struct {
	CreatedAt pgtype.Timestamp `json:"createdAt"`
	Title     string           `json:"title"`
	Uom       string           `json:"uom"`
	Remaining float64          `json:"remaining"`
}

func (q *Queries) CreateConsumable(ctx context.Context, arg CreateConsumableParams) (Consumable, error) {
	row := q.db.QueryRow(ctx, createConsumable,
		arg.CreatedAt,
		arg.Title,
		arg.Uom,
		arg.Remaining,
	)
	var i Consumable
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.Title,
		&i.Uom,
		&i.Remaining,
	)
	return i, err
}
