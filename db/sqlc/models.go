// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type AppUser struct {
	ID        pgtype.UUID `json:"id"`
	CreatedAt pgtype.Date `json:"created_at"`
	FirstName pgtype.Text `json:"first_name"`
	LastName  pgtype.Text `json:"last_name"`
	UserName  pgtype.Text `json:"user_name"`
	Password  pgtype.Text `json:"password"`
}

type Consumable struct {
	ID        pgtype.UUID      `json:"id"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
	Title     string           `json:"title"`
	Uom       string           `json:"uom"`
	Remaining float64          `json:"remaining"`
}

type ConsumablePurchase struct {
	PurchaseID pgtype.UUID `json:"purchase_id"`
	Consumable pgtype.UUID `json:"consumable"`
	Amount     float64     `json:"amount"`
}

type ConsumptionReport struct {
	ID         pgtype.UUID `json:"id"`
	Date       pgtype.Date `json:"date"`
	Consumable pgtype.UUID `json:"consumable"`
}

type Customer struct {
	ID          pgtype.UUID `json:"id"`
	FirstName   string      `json:"first_name"`
	LastName    string      `json:"last_name"`
	PhoneNumber string      `json:"phone_number"`
	Email       pgtype.Text `json:"email"`
}

type Employee struct {
	ID             pgtype.UUID      `json:"id"`
	CreatedAt      pgtype.Timestamp `json:"createdAt"`
	StartedWorking pgtype.Timestamp `json:"startedWorking"`
	FirstName      string           `json:"first_name"`
	LastName       string           `json:"last_name"`
	FatherName     string           `json:"father_name"`
}

type OtherPurchase struct {
	Title pgtype.UUID `json:"title"`
}

type Payment struct {
	ID       pgtype.UUID `json:"id"`
	Date     pgtype.Date `json:"date"`
	Amount   float64     `json:"amount"`
	Employee pgtype.UUID `json:"employee"`
}

type ProductionReport struct {
	ID     pgtype.UUID `json:"id"`
	Date   pgtype.Date `json:"date"`
	Amount float64     `json:"amount"`
}

type Purchase struct {
	ID    pgtype.UUID `json:"id"`
	Price float64     `json:"price"`
}

type Sale struct {
	ID              pgtype.UUID `json:"id"`
	Date            pgtype.Date `json:"date"`
	Customer        pgtype.UUID `json:"customer"`
	Sort            pgtype.UUID `json:"sort"`
	UnitPrice       float64     `json:"unit_price"`
	Amount          float64     `json:"amount"`
	DiscountPerUnit float64     `json:"discount_per_unit"`
}

type Sort struct {
	ID        pgtype.UUID `json:"id"`
	Code      string      `json:"code"`
	Remaining float64     `json:"remaining"`
}

type SortReport struct {
	ID     pgtype.UUID `json:"id"`
	Date   pgtype.Date `json:"date"`
	Amount float64     `json:"amount"`
	Sort   pgtype.UUID `json:"sort"`
}
